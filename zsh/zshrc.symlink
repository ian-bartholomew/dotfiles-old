# zmodload zsh/zprof
# shortcut to this dotfiles path is $ZSH
export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

# your project folder that we can `c [tab]` to
export PROJECTS=~/Dev

# set default user
export DEFAULT_USER=`whoami`

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# load everything but the path and completion files
source $ZSH/aliases.zsh
source $ZSH/config.zsh
source $ZSH/fpath.zsh
source $ZSH/prompt.zsh
source $ZSH/window.zsh

# initialize autocomplete here, otherwise functions won't be loaded
# On slow systems, checking the cached .zcompdump file to see if it must be
# regenerated adds a noticable delay to zsh startup.  This little hack restricts
# it to once a day.
# https://gist.github.com/ctechols/ca1035271ad134841284
#
# The globbing is a little complicated here:
# - '#q' is an explicit glob qualifier that makes globbing work within zsh's [[ ]] construct.
# - 'N' makes the glob pattern evaluate to nothing when it doesn't match (rather than throw a globbing error)
# - '.' matches "regular files"
# - 'mh+24' matches files (or directories or whatever) that are older than 24 hours.
autoload -Uz compinit
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
  compinit
else
  compinit -C
fi

# load every completion after autocomplete loads
source $ZSH/completion.zsh

# Load zgen only if a user types a zgen command
zgen () {
	if [[ ! -s ${ZDOTDIR:-${HOME}}/.zgen/zgen.zsh ]]; then
		git clone --recursive https://github.com/tarjoilija/zgen.git ${ZDOTDIR:-${HOME}}/.zgen
	fi
	source ${ZDOTDIR:-${HOME}}/.zgen/zgen.zsh
	zgen "$@"
}

# check if there's no init script
if [[ ! -s ${ZDOTDIR:-${HOME}}/.zgen/init.zsh ]]; then
  echo "Creating a zgen save"

  zgen oh-my-zsh

  # plugins
  zgen oh-my-zsh plugins/aws
  zgen oh-my-zsh plugins/brew
  zgen oh-my-zsh plugins/docker
  zgen oh-my-zsh plugins/git
  # zgen oh-my-zsh plugins/npm
  zgen oh-my-zsh plugins/yarn
  zgen oh-my-zsh plugins/terraform

  zgen load chrissicool/zsh-256color
  zgen load supercrabtree/k

  zgen load zsh-users/zsh-history-substring-search
  zgen load zsh-users/zsh-autosuggestions

  # completions
  zgen load srijanshetty/docker-zsh
  zgen load zsh-users/zsh-completions src
  zgen load lukechilds/zsh-better-npm-completion

  # theme
  # zgen oh-my-zsh themes/agnoster
  zgen load denysdovhan/spaceship-prompt spaceship

  # save all to init script
  zgen save

else
  source ${ZDOTDIR:-${HOME}}/.zgen/init.zsh
fi

eval "$(aws-vault --completion-script-zsh)"
eval "$(_POLICY_SENTRY_COMPLETE=source_zsh policy_sentry)"

# export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# # place this after nvm initialization!
# autoload -U add-zsh-hook
# load-nvmrc() {
#   local node_version="$(nvm version)"
#   local nvmrc_path="$(nvm_find_nvmrc)"

#   if [ -n "$nvmrc_path" ]; then
#     local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

#     if [ "$nvmrc_node_version" = "N/A" ]; then
#       nvm install
#     elif [ "$nvmrc_node_version" != "$node_version" ]; then
#       nvm use
#     fi
#   elif [ "$node_version" != "$(nvm version default)" ]; then
#     echo "Reverting to nvm default version"
#     nvm use default
#   fi
# }
# add-zsh-hook chpwd load-nvmrc
# load-nvmrc
if test "$(uname)" = "Darwin"
then
  . /usr/local/opt/asdf/asdf.sh
elif test "$(expr substr $(uname -s) 1 5)" = "Linux"
then
  . $HOME/.asdf/asdf.sh
fi
